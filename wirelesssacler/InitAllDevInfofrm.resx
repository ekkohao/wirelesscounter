<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAPDMmMYJ5Znmnl3+eloh1j1xOQlQOCQQKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD////8/////P////z/+AB8/+AAHP/gABz8AAAc/AAAHPwAAAT8AAAE+AAABIAAAAQAAAAEgAAABIAA
        AAyAAAAcwAAAPOAAAPz4AAP8/gcD/P4OAfz+BAH8/AQA/P4AAPz+BAH8/w4B/P/+A/z////8/////P//
        //w=
</value>
  </data>
</root>