<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="skinToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Add.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAPDMmMYJ5Znmnl3+eloh1j1xOQlQOCQQKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD////8/////P////z/+AB8/+AAHP/gABz8AAAc/AAAHPwAAAT8AAAE+AAABIAAAAQAAAAEgAAABIAA
        AAyAAAAcwAAAPOAAAPz4AAP8/gcD/P4OAfz+BAH8/AQA/P4AAPz+BAH8/w4B/P/+A/z////8/////P//
        //w=
</value>
  </data>
</root>